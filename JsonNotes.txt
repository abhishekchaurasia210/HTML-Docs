What is JSON?
============
- JSON stands for JavaScript Object Notation
- JSON is a lightweight data-interchange format
- JSON is "self-describing" and easy to understand
- JSON is language independent *.

Why use JSON?
=============
-Since the JSON format is text only, it can easily be sent to and from a server, and used as a data format by any programming language.

-JavaScript has a built in function to convert a string, written in JSON format, into native JavaScript objects:

-JSON.parse()

-So, if you receive data from a server, in JSON format, you can use it like any other JavaScript object.

- Converting from string to json format done with help of built in method is JSON.stringify().

JSON Syntax Rules:
=================
JSON syntax is derived from JavaScript object notation syntax:

Data is in name/value pairs.
Data is separated by commas.
Curly braces hold objects.
Square brackets hold arrays.

-JSON Data - A Name and a Value

-JSON data is written as name/value pairs.

-A name/value pair consists of a field name (in double quotes), followed by a colon, followed by a value:

Example:
=======
"name":"John"

JSON - Evaluates to JavaScript Objects.

The JSON format is almost identical to JavaScript objects.

In JSON, keys must be strings, written with double quotes:

JSON
{ "name":"John" }


JSON is Like XML Because:
=========================
Both JSON and XML are "self describing" (human readable)
Both JSON and XML are hierarchical (values within values)
Both JSON and XML can be parsed and used by lots of programming languages
Both JSON and XML can be fetched with an XMLHttpRequest.

JSON is Unlike XML Because:
==========================
JSON doesn't use end tag
JSON is shorter
JSON is quicker to read and write
JSON can use arrays
The biggest difference is:
=========================

 XML has to be parsed with an XML parser. JSON can be parsed by a standard JavaScript function.

Why JSON is Better Than XML:
===========================
-XML is much more difficult to parse than JSON.
-JSON is parsed into a ready-to-use JavaScript object.

For AJAX applications, 

	-JSON is faster and easier than XML:

Using XML:

-Fetch an XML document
-Use the XML DOM to loop through the document
-Extract values and store in variables
-Using JSON

Fetch a JSON string:

JSON.Parse the JSON string


